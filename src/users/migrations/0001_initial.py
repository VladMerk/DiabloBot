# Generated by Django 4.1.6 on 2023-02-09 14:08

from django.db import migrations, models
import users.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=200, unique=True)),
                ("discriminator", models.CharField(blank=True, max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("avatar", models.CharField(blank=True, max_length=150, null=True)),
                ("locale", models.CharField(blank=True, max_length=50, null=True)),
                ("flags", models.IntegerField(blank=True, null=True)),
                ("messages", models.PositiveIntegerField(default=0)),
                ("level", models.PositiveIntegerField(default=1)),
                ("password", models.CharField(max_length=128)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ["username"],
            },
            managers=[
                ("objects", users.managers.DiscordManager()),
            ],
        ),
    ]
